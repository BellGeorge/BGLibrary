<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TDRemoteRequest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TDRemoteRequest</TokenIdentifier>
			<Abstract type="html">Asynchronous HTTP request; a fairly simple wrapper around NSURLConnection that calls a completion block when ready.</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>
			
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/initWithMethod:URL:body:requestHeaders:onCompletion:</TokenIdentifier>
			<Abstract type="html">Creates a request; call start to send it on its way.</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (id)initWithMethod:(NSString *)method URL:(NSURL *)url body:(id)body requestHeaders:(NSDictionary *)requestHeaders onCompletion:(TDRemoteRequestCompletionBlock)onCompletion</Declaration>
			
			
			<Anchor>//api/name/initWithMethod:URL:body:requestHeaders:onCompletion:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/setAuthorizer:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>@property (retain, nonatomic) id&lt;TDAuthorizer&gt; authorizer</Declaration>
			
			
			<Anchor>//api/name/authorizer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TDRemoteRequest/authorizer</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>@property (retain, nonatomic) id&lt;TDAuthorizer&gt; authorizer</Declaration>
			
			
			<Anchor>//api/name/authorizer</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/dontLog404</TokenIdentifier>
			<Abstract type="html">In some cases a kTDStatusNotFound Not Found is an expected condition and shouldn&apos;t be logged; call this to suppress that log message.</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)dontLog404</Declaration>
			
			
			<Anchor>//api/name/dontLog404</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/start</TokenIdentifier>
			<Abstract type="html">Starts a request; when finished, the onCompletion block will be called.</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/stop</TokenIdentifier>
			<Abstract type="html">Stops the request, calling the onCompletion block.</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)stop</Declaration>
			
			
			<Anchor>//api/name/stop</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/setStatusInfo:</TokenIdentifier>
			<Abstract type="html">JSON-compatible dictionary with status information, to be returned from _activity API</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSMutableDictionary *statusInfo</Declaration>
			
			
			<Anchor>//api/name/statusInfo</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/TDRemoteRequest/statusInfo</TokenIdentifier>
			<Abstract type="html">JSON-compatible dictionary with status information, to be returned from _activity API</Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSMutableDictionary *statusInfo</Declaration>
			
			
			<Anchor>//api/name/statusInfo</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/setupRequest:withBody:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)setupRequest:(NSMutableURLRequest *)request withBody:(id)body</Declaration>
			
			
			<Anchor>//api/name/setupRequest:withBody:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/clearConnection</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)clearConnection</Declaration>
			
			
			<Anchor>//api/name/clearConnection</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/cancelWithStatus:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)cancelWithStatus:(int)status</Declaration>
			
			
			<Anchor>//api/name/cancelWithStatus:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/TDRemoteRequest/respondWithResult:error:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>- (void)respondWithResult:(id)result error:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/respondWithResult:error:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TDRemoteRequest/userAgentHeader</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)userAgentHeader</Declaration>
			
			
			<Anchor>//api/name/userAgentHeader</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TDRemoteRequest/checkTrust:forHost:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>TDRemoteRequest.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)checkTrust:(SecTrustRef)trust forHost:(NSString *)host</Declaration>
			
			
			<Anchor>//api/name/checkTrust:forHost:</Anchor>
		</Token>
		
	</File>
</Tokens>