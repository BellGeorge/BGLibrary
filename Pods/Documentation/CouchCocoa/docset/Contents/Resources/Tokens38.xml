<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/CouchbaseValidationContext.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/CouchbaseValidationContext</TokenIdentifier>
			<Abstract type="html">Context passed into a CouchValidateUpdateBlock.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>
			
			<NodeRef refid="38"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setCurrentRevision:</TokenIdentifier>
			<Abstract type="html">The contents of the current revision of the document, or nil if this is a new document.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *currentRevision</Declaration>
			
			
			<Anchor>//api/name/currentRevision</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/currentRevision</TokenIdentifier>
			<Abstract type="html">The contents of the current revision of the document, or nil if this is a new document.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *currentRevision</Declaration>
			
			
			<Anchor>//api/name/currentRevision</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setDatabaseName:</TokenIdentifier>
			<Abstract type="html">The name of the database being updated.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *databaseName</Declaration>
			
			
			<Anchor>//api/name/databaseName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/databaseName</TokenIdentifier>
			<Abstract type="html">The name of the database being updated.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *databaseName</Declaration>
			
			
			<Anchor>//api/name/databaseName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setUserName:</TokenIdentifier>
			<Abstract type="html">The name of the logged-in user, or nil if this is an anonymous request.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/userName</TokenIdentifier>
			<Abstract type="html">The name of the logged-in user, or nil if this is an anonymous request.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setIsAdmin:</TokenIdentifier>
			<Abstract type="html">Does the user have admin privileges?
	(If the database is in the default &quot;admin party&quot; mode, this will be YES even when the userName is nil.) </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL isAdmin</Declaration>
			
			
			<Anchor>//api/name/isAdmin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/isAdmin</TokenIdentifier>
			<Abstract type="html">Does the user have admin privileges?
	(If the database is in the default &quot;admin party&quot; mode, this will be YES even when the userName is nil.) </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) BOOL isAdmin</Declaration>
			
			
			<Anchor>//api/name/isAdmin</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setSecurity:</TokenIdentifier>
			<Abstract type="html">The database&apos;s security object, which assigns roles and privileges.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *security</Declaration>
			
			
			<Anchor>//api/name/security</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/security</TokenIdentifier>
			<Abstract type="html">The database&apos;s security object, which assigns roles and privileges.</Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *security</Declaration>
			
			
			<Anchor>//api/name/security</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setErrorType:</TokenIdentifier>
			<Abstract type="html">The type of error to report, if the validate block returns NO.
	The default value is &quot;forbidden&quot;, which will result in an HTTP 403 status. </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (copy) NSString *errorType</Declaration>
			
			
			<Anchor>//api/name/errorType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/errorType</TokenIdentifier>
			<Abstract type="html">The type of error to report, if the validate block returns NO.
	The default value is &quot;forbidden&quot;, which will result in an HTTP 403 status. </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (copy) NSString *errorType</Declaration>
			
			
			<Anchor>//api/name/errorType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/CouchbaseValidationContext/setErrorMessage:</TokenIdentifier>
			<Abstract type="html">The error message to return in the HTTP response, if the validate block returns NO.
	The default value is &quot;invalid document&quot;. </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (copy) NSString *errorMessage</Declaration>
			
			
			<Anchor>//api/name/errorMessage</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/CouchbaseValidationContext/errorMessage</TokenIdentifier>
			<Abstract type="html">The error message to return in the HTTP response, if the validate block returns NO.
	The default value is &quot;invalid document&quot;. </Abstract>
			<DeclaredIn>CouchbaseCallbacks.h</DeclaredIn>			
			
			<Declaration>@property (copy) NSString *errorMessage</Declaration>
			
			
			<Anchor>//api/name/errorMessage</Anchor>
		</Token>
		
	</File>
</Tokens>