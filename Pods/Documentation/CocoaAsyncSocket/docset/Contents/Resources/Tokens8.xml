<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/GCDAsyncUdpSocketDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/GCDAsyncUdpSocketDelegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>
			
			<NodeRef refid="8"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocket:didConnectToAddress:</TokenIdentifier>
			<Abstract type="html">By design, UDP is a connectionless protocol, and connecting is not needed.
However, you may optionally choose to connect to a particular host for reasons
outlined in the documentation for the various connect methods listed above.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocket:(GCDAsyncUdpSocket *)sock didConnectToAddress:(NSData *)address</Declaration>
			
			
			<Anchor>//api/name/udpSocket:didConnectToAddress:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocket:didNotConnect:</TokenIdentifier>
			<Abstract type="html">By design, UDP is a connectionless protocol, and connecting is not needed.
However, you may optionally choose to connect to a particular host for reasons
outlined in the documentation for the various connect methods listed above.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocket:(GCDAsyncUdpSocket *)sock didNotConnect:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/udpSocket:didNotConnect:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocket:didSendDataWithTag:</TokenIdentifier>
			<Abstract type="html">Called when the datagram with the given tag has been sent.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocket:(GCDAsyncUdpSocket *)sock didSendDataWithTag:(long)tag</Declaration>
			
			
			<Anchor>//api/name/udpSocket:didSendDataWithTag:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocket:didNotSendDataWithTag:dueToError:</TokenIdentifier>
			<Abstract type="html">Called if an error occurs while trying to send a datagram.
This could be due to a timeout, or something more serious such as the data being too large to fit in a sigle packet.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocket:(GCDAsyncUdpSocket *)sock didNotSendDataWithTag:(long)tag dueToError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/udpSocket:didNotSendDataWithTag:dueToError:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocket:didReceiveData:fromAddress:withFilterContext:</TokenIdentifier>
			<Abstract type="html">Called when the socket has received the requested datagram.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocket:(GCDAsyncUdpSocket *)sock didReceiveData:(NSData *)data fromAddress:(NSData *)address withFilterContext:(id)filterContext</Declaration>
			
			
			<Anchor>//api/name/udpSocket:didReceiveData:fromAddress:withFilterContext:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/GCDAsyncUdpSocketDelegate/udpSocketDidClose:withError:</TokenIdentifier>
			<Abstract type="html">Called when the socket is closed.</Abstract>
			<DeclaredIn>GCDAsyncUdpSocket.h</DeclaredIn>			
			
			<Declaration>- (void)udpSocketDidClose:(GCDAsyncUdpSocket *)sock withError:(NSError *)error</Declaration>
			
			
			<Anchor>//api/name/udpSocketDidClose:withError:</Anchor>
		</Token>
		
	</File>
</Tokens>